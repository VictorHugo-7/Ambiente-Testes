então o get seria quando alguém acessar a rota mostre alguma coisa ?


Request (req) - É o que você RECEBE do usuário:
Response (res) - É o que você ENVIA para o usuário:

req (request) é o que chega
res (response) é o que sai
Você sempre precisa enviar uma resposta usando res
O req tem várias formas de receber dados (query, params, body)

// 3. Dados do formulário ou JSON (Body)
console.log(req.body);  // {nome: "João", idade: 25}

GET - PEGA/RECEBE informações

Quando você quer VER algo (uma página, dados, etc)
Exemplo: abrir uma página, ver uma lista de produtos
Sempre precisa retornar (responder) algo para mostrar ao usuário

POST - ENVIA informações

Quando você quer CRIAR/ENVIAR algo novo
Exemplo: enviar um formulário, criar uma conta
Também retorna uma resposta (confirmação, erro, etc)

GET: Cliente PEDE para VER → Servidor RESPONDE mostrando
POST: Cliente ENVIA dados → Servidor RESPONDE confirmando

const express = require('express');
const app = express();
app.use(express.json());

// Lista de produtos (simulando banco de dados)
const produtos = [
    { id: 1, nome: 'Celular', preco: 1000 },
    { id: 2, nome: 'Notebook', preco: 2000 }
];

// GET - Ver produtos
app.get('/produtos', (req, res) => {
    // Cliente faz requisição GET para VER os produtos
    // Servidor RESPONDE com a lista
    res.json(produtos);
});

// POST - Criar novo produto
app.post('/produtos', (req, res) => {
    // Cliente ENVIA dados do novo produto
    const novoProduto = req.body;
    
    // Servidor adiciona na lista
    produtos.push(novoProduto);
    
    // Servidor RESPONDE confirmando a criação
    res.json({ mensagem: 'Produto criado!' });
});